{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleClick","event","setState","key","document","addEventListener","this","setTimeout","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAeEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAhBtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WAAwB,IAAD,OACrBO,YAAW,WACTH,SAASI,oBAAoB,QAAS,EAAKR,eAC1C,OAZP,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,4BACGV,EAAU,mCACqBA,EADrB,KAEP,kCA3Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.7276991f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    setTimeout(() => {\n      document.removeEventListener('keyup', this.handleClick);\n    }, 3000);\n  }\n\n  handleClick = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p>\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}